{
	"info": {
		"_postman_id": "0a915c6b-7163-4049-bdff-d40da2396247",
		"name": "API_Testing_Manual",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25066881"
	},
	"item": [
		{
			"name": "CURD Function Test",
			"item": [
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Check body data is null or not\", function () {\r",
									"    pm.expect(pm.response.text()).to.be.not.equal(null);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Check origin is there or not\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"origin\");\r",
									"});\r",
									"pm.test(\"Check URL is there or not\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"url\");\r",
									"});\r",
									"pm.test(\"Check Host is there or not\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Host\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check origin value must be 24.188.3.52 \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.origin).to.eql(\"24.188.3.52\");\r",
									"});\r",
									"pm.test(\"Check batch value must be 29 \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.json.Batch).to.eql(29);\r",
									"});\r",
									"pm.test(\"Check Host value must be httpbin.org \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.headers.Host).to.eql(\"httpbin.org\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Batch\": 29,\r\n    \"Name\": \"Saiful\",\r\n    \"State\": \"Alabama\",\r\n    \"Topic\": \"API\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://httpbin.org/post",
							"protocol": "https",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Check body data is null or not\", function () {\r",
									"    pm.expect(pm.response.text()).to.be.not.equal(null);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Check origin is there or not\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"origin\");\r",
									"});\r",
									"pm.test(\"Check URL is there or not\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"url\");\r",
									"});\r",
									"pm.test(\"Check Host is there or not\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Host\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check origin value must be 24.188.3.52 \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.origin).to.eql(\"24.188.3.52\");\r",
									"});\r",
									"pm.test(\"Check batch value must be 30 \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.json.Batch).to.eql(30);\r",
									"});\r",
									"pm.test(\"Check Host value must be httpbin.org \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.headers.Host).to.eql(\"httpbin.org\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Batch\": 30,\r\n    \"Name\": \"Joy\",\r\n    \"State\": \"New york\",\r\n    \"Topic\": \"Postman\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://httpbin.org/put",
							"protocol": "https",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"put"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Check body data is null or not\", function () {\r",
									"    pm.expect(pm.response.text()).to.be.not.equal(null);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Check origin is there or not\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"origin\");\r",
									"});\r",
									"pm.test(\"Check URL is there or not\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"url\");\r",
									"});\r",
									"pm.test(\"Check Host is there or not\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Host\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check origin value must be 24.188.3.52 \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.origin).to.eql(\"24.188.3.52\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check Host value must be httpbin.org \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.headers.Host).to.eql(\"httpbin.org\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://httpbin.org/get",
							"protocol": "https",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 800ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Check body data is null or not\", function () {\r",
									"    pm.expect(pm.response.text()).to.be.not.equal(null);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Check origin is there or not\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"origin\");\r",
									"});\r",
									"pm.test(\"Check URL is there or not\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"url\");\r",
									"});\r",
									"pm.test(\"Check Host is there or not\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Host\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check origin value must be 24.188.3.52 \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.origin).to.eql(\"24.188.3.52\");\r",
									"});\r",
									"\r",
									"pm.test(\"Check Host value must be httpbin.org \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.headers.Host).to.eql(\"httpbin.org\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://httpbin.org/delete",
							"protocol": "https",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"delete"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}